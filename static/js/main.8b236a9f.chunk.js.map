{"version":3,"sources":["api/images.ts","components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","imageWidth","frameSize","step","animDuration","infinite","translate","handleImageWidthChange","event","setState","target","value","handleFrameSizeChange","handleStepChange","handleAnimDurationChange","handleInfiniteChange","prevState","rightButtonHandler","newTranslate","minTranslate","props","images","length","leftButtonHandler","this","containerWidth","isLeftButtonDisabled","isRightButtonDisabled","className","style","width","map","image","transform","transition","src","alt","type","onClick","disabled","action","method","name","min","max","onChange","checked","React","Component","App","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b236a9f.chunk.js","sourcesContent":["export default [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ninterface State {\n  imageWidth: number,\n  frameSize: number,\n  step: number,\n  animDuration: number,\n  infinite: boolean,\n  translate: number,\n}\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    imageWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animDuration: 1000,\n    infinite: false,\n    translate: 0,\n  };\n\n  handleImageWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      imageWidth: +event.target.value,\n    });\n  };\n\n  handleFrameSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +event.target.value,\n    });\n  };\n\n  handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: +event.target.value,\n    });\n  };\n\n  handleAnimDurationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animDuration: +event.target.value,\n    });\n  };\n\n  handleInfiniteChange = () => {\n    this.setState(prevState => ({\n      infinite: !prevState.infinite,\n    }));\n  };\n\n  rightButtonHandler = () => {\n    const {\n      imageWidth,\n      frameSize,\n      step,\n      infinite,\n      translate,\n    } = this.state;\n\n    let newTranslate = translate - (imageWidth * step);\n\n    const minTranslate = (imageWidth\n      * (frameSize - this.props.images.length));\n\n    if (newTranslate < minTranslate) {\n      newTranslate = minTranslate;\n    }\n\n    if ((translate === minTranslate) && infinite) {\n      newTranslate = 0;\n    }\n\n    this.setState({\n      translate: newTranslate,\n    });\n  };\n\n  leftButtonHandler = () => {\n    const {\n      imageWidth,\n      frameSize,\n      step,\n      infinite,\n      translate,\n    } = this.state;\n\n    let newTranslate = translate + (imageWidth * step);\n\n    const maxTranslate = 0;\n    const minTranslate = (imageWidth\n      * (frameSize - this.props.images.length));\n\n    if (newTranslate > maxTranslate) {\n      newTranslate = maxTranslate;\n    }\n\n    if (translate === maxTranslate && infinite) {\n      newTranslate = minTranslate;\n    }\n\n    this.setState({\n      translate: newTranslate,\n    });\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      imageWidth,\n      frameSize,\n      step,\n      animDuration,\n      infinite,\n      translate,\n    } = this.state;\n\n    const containerWidth = frameSize * imageWidth;\n    let isLeftButtonDisabled = false;\n    let isRightButtonDisabled = false;\n\n    if (translate === 0 && !infinite) {\n      isLeftButtonDisabled = true;\n    }\n\n    // translate could be between -1300 and 0\n    if (translate === imageWidth * (frameSize - images.length) && !infinite) {\n      isRightButtonDisabled = true;\n    }\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${containerWidth}px` }}\n        >\n          {images.map(image => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${translate}px)`,\n                transition: `${animDuration}ms`,\n              }}\n\n            >\n              <img\n                src={image}\n                style={{ width: `${imageWidth}px` }}\n                alt={image[7] === '.'\n                  ? `smile_${image[6]}`\n                  : `smile_${image[6] + image[7]}`}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"button button--left\"\n            type=\"button\"\n            onClick={this.leftButtonHandler}\n            disabled={isLeftButtonDisabled}\n          >\n            <div className=\"triangle\" />\n          </button>\n          <button\n            className=\"button button--right\"\n            type=\"button\"\n            onClick={this.rightButtonHandler}\n            disabled={isRightButtonDisabled}\n            data-cy=\"next\"\n          >\n            <div className=\"triangle triangle--right\" />\n          </button>\n        </div>\n\n        <form\n          action=\"/\"\n          method=\"post\"\n          className=\"Carousel__form\"\n        >\n          <label className=\"form-field\">\n            Image width:\n            <input\n              type=\"number\"\n              name=\"item_width\"\n              value={imageWidth}\n              min=\"130\"\n              max=\"260\"\n              step=\"10\"\n              className=\"form\"\n              onChange={this.handleImageWidthChange}\n            />\n          </label>\n\n          <label className=\"form-field\">\n            Frame size:\n            <input\n              type=\"number\"\n              name=\"frame_size\"\n              value={frameSize}\n              min=\"1\"\n              max=\"10\"\n              step=\"1\"\n              className=\"form\"\n              onChange={this.handleFrameSizeChange}\n            />\n          </label>\n\n          <label className=\"form-field\">\n            Step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max=\"10\"\n              step=\"1\"\n              className=\"form\"\n              onChange={this.handleStepChange}\n            />\n          </label>\n\n          <label className=\"form-field form-field--anim\">\n            Animation duration:\n            <input\n              type=\"number\"\n              name=\"animation_duration\"\n              value={animDuration}\n              min=\"100\"\n              max=\"30000\"\n              step=\"100\"\n              className=\"form\"\n              onChange={this.handleAnimDurationChange}\n            />\n          </label>\n          <label className=\"form-field form-field--infinite\">\n            Infinite:\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={infinite}\n              className=\"form form--infinite\"\n              onChange={this.handleInfiniteChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport images from './api/images';\nimport { Carousel } from './components/Carousel';\n\nclass App extends React.PureComponent<{}> {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className='title' data-cy='title'>\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}